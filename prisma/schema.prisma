// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VehicleType {
  CAR
  BIKE
  EV
  HANDICAP_ACCESSIBLE
}

enum SlotStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
}

enum SessionStatus {
  ACTIVE
  COMPLETED
}

enum BillingType {
  HOURLY
  DAY_PASS
}

model Vehicle {
  id          String      @id @default(cuid())
  numberPlate String      @unique
  type        VehicleType
  sessions    Session[] // One vehicle can have multiple sessions
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Slot {
  id        String      @id @default(cuid())
  location  String      @unique // e.g., "B1-12"
  type      VehicleType // What type of vehicle can use this slot
  status    SlotStatus  @default(AVAILABLE)
  sessions  Session[] // All sessions that used this slot
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Staff {
  id         String    @id @default(cuid())
  employeeId String    @unique
  name       String
  phone      String
  sessions   Session[] // Sessions handled by this staff
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Session {
  id          String        @id @default(cuid())
  vehicleId   String
  slotId      String
  staffId     String
  entryTime   DateTime      @default(now())
  exitTime    DateTime?
  status      SessionStatus @default(ACTIVE)
  billingType BillingType
  vehicle     Vehicle       @relation(fields: [vehicleId], references: [id])
  slot        Slot          @relation(fields: [slotId], references: [id])
  staff       Staff         @relation(fields: [staffId], references: [id])
  billing     Billing?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Billing {
  id        String      @id @default(cuid())
  sessionId String      @unique
  type      BillingType
  amount    Float
  isPaid    Boolean     @default(false)
  session   Session     @relation(fields: [sessionId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
